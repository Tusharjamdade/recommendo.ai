/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/gL25iIxxzGu
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Arimo } from 'next/font/google'
import { Rubik } from 'next/font/google'

arimo({
  subsets: ['latin'],
  display: 'swap',
})

rubik({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useEffect } from "react"
import { Textarea } from "@/components/ui/textarea"
import Link from "next/link"

export function HomePage() {
  const [searchQuery, setSearchQuery] = useState("")
  const [recommendations, setRecommendations] = useState([])
  const [previousSuggestions, setPreviousSuggestions] = useState([
    {
      type: "product",
      title: "Wireless Headphones",
      description: "High-quality noise-cancelling headphones",
      url: "#",
      image: "/placeholder.svg",
    },
    {
      type: "movie",
      title: "Interstellar",
      description: "Sci-fi epic about space exploration",
      url: "#",
      image: "/placeholder.svg",
    },
    {
      type: "game",
      title: "Elden Ring",
      description: "Challenging open-world action RPG",
      url: "#",
      image: "/placeholder.svg",
    },
  ])
  useEffect(() => {
    const fetchRecommendations = async () => {
      try {
        const response = await fetch(`/api/recommendations?q=${searchQuery}`)
        const data = await response.json()
        setRecommendations(data)
      } catch (error) {
        console.error("Error fetching recommendations:", error)
      }
    }
    if (searchQuery.trim() !== "") {
      fetchRecommendations()
    } else {
      setRecommendations([])
    }
  }, [searchQuery])
  return (
    <div className="w-full max-w-6xl mx-auto px-4 md:px-6 py-12 md:py-16">
      <div className="flex flex-col items-center justify-center mb-8 md:mb-12">
        <h1 className="text-3xl md:text-4xl font-bold tracking-tight mb-2">Discover Personalized Recommendations</h1>
        <p className="text-muted-foreground text-lg md:text-xl max-w-3xl text-center">
          Enter a topic or keyword and we\'ll suggest relevant products, movies, and games for you.
        </p>
      </div>
      <div className="relative mb-8 md:mb-12">
        <Textarea
          placeholder="Enter a topic or keyword..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full rounded-lg bg-background pl-12 pr-4 py-3 text-lg focus:outline-none focus:ring-1 focus:ring-primary"
        />
        <div className="absolute left-4 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground" />
      </div>
      {recommendations.length > 0 && (
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 md:gap-8">
          {recommendations.map((item) => (
            <div
              key={item.id}
              className="bg-background rounded-lg overflow-hidden shadow-lg transition-all hover:shadow-xl"
            >
              <Link href="#" className="block" prefetch={false}>
                <img
                  src="/placeholder.svg"
                  alt={item.title}
                  width={400}
                  height={225}
                  className="w-full h-48 object-cover"
                  style={{ aspectRatio: "400/225", objectFit: "cover" }}
                />
                <div className="p-4">
                  <h3 className="text-lg font-semibold mb-1">{item.title}</h3>
                  <p className="text-muted-foreground text-sm line-clamp-2">{item.description}</p>
                </div>
              </Link>
            </div>
          ))}
        </div>
      )}
      {recommendations.length === 0 && searchQuery.trim() !== "" && (
        <div className="text-center text-muted-foreground">No recommendations found for "{searchQuery}".</div>
      )}
      {previousSuggestions.length > 0 && (
        <div className="mt-12 md:mt-16">
          <h2 className="text-2xl md:text-3xl font-bold tracking-tight mb-4">Previous Suggestions</h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 md:gap-8">
            {previousSuggestions.map((item, index) => (
              <div
                key={index}
                className="bg-background rounded-lg overflow-hidden shadow-lg transition-all hover:shadow-xl"
              >
                <Link href="#" className="block" prefetch={false}>
                  <img
                    src="/placeholder.svg"
                    alt={item.title}
                    width={400}
                    height={225}
                    className="w-full h-48 object-cover"
                    style={{ aspectRatio: "400/225", objectFit: "cover" }}
                  />
                  <div className="p-4">
                    <h3 className="text-lg font-semibold mb-1">{item.title}</h3>
                    <p className="text-muted-foreground text-sm line-clamp-2">{item.description}</p>
                    <div className="mt-2 text-xs text-muted-foreground">{item.type}</div>
                  </div>
                </Link>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  )
}
